{"ast":null,"code":"import { useEffect, useCallback, useRef } from 'react'; // 键盘事件 keyCode 别名\n\nvar aliasKeyCodeMap = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  delete: [8, 46]\n}; // 键盘事件 key 别名\n\nvar aliasKeyMap = {\n  esc: 'Escape',\n  tab: 'Tab',\n  enter: 'Enter',\n  space: ' ',\n  // IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  delete: ['Backspace', 'Delete']\n}; // 修饰键\n\nvar modifierKey = {\n  ctrl: function ctrl(event) {\n    return event.ctrlKey;\n  },\n  shift: function shift(event) {\n    return event.shiftKey;\n  },\n  alt: function alt(event) {\n    return event.altKey;\n  },\n  meta: function meta(event) {\n    return event.metaKey;\n  }\n}; // 返回空对象\n\nvar noop = function noop() {};\n/**\n * 判断对象类型\n * @param [obj: any] 参数对象\n * @returns String\n */\n\n\nfunction isType(obj) {\n  return Object.prototype.toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n}\n/**\n * 判断按键是否激活\n * @param [event: KeyboardEvent]键盘事件\n * @param [keyFilter: any] 当前键\n * @returns Boolean\n */\n\n\nfunction genFilterKey(event, keyFilter) {\n  var type = isType(keyFilter); // 数字类型直接匹配事件的 keyCode\n\n  if (type === 'number') {\n    return event.keyCode === keyFilter;\n  } // 字符串依次判断是否有组合键\n\n\n  var genArr = keyFilter.split('.');\n  var genLen = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = genArr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var key = _step.value; // 组合键\n\n      var genModifier = modifierKey[key]; // key 别名\n\n      var aliasKey = aliasKeyMap[key]; // keyCode 别名\n\n      var aliasKeyCode = aliasKeyCodeMap[key];\n      /**\n       * 满足以上规则\n       * 1. 自定义组合键别名\n       * 2. 自定义 key 别名\n       * 3. 自定义 keyCode 别名\n       * 4. 匹配 key 或 keyCode\n       */\n\n      if (genModifier && genModifier(event) || (aliasKey && isType(aliasKey) === 'array' ? aliasKey.includes(event.key) : aliasKey === event.key) || (aliasKeyCode && isType(aliasKeyCode) === 'array' ? aliasKeyCode.includes(event.keyCode) : aliasKeyCode === event.keyCode) || event.key.toUpperCase() === key.toUpperCase()) {\n        genLen++;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return genLen === genArr.length;\n}\n/**\n * 键盘输入预处理方法\n * @param [keyFilter: any] 当前键\n * @returns () => Boolean\n */\n\n\nfunction genKeyFormater(keyFilter) {\n  var type = isType(keyFilter);\n\n  if (type === 'function') {\n    return keyFilter;\n  }\n\n  if (type === 'string' || type === 'number') {\n    return function (event) {\n      return genFilterKey(event, keyFilter);\n    };\n  }\n\n  if (type === 'array') {\n    return function (event) {\n      return keyFilter.some(function (item) {\n        return genFilterKey(event, item);\n      });\n    };\n  }\n\n  return keyFilter ? function () {\n    return true;\n  } : function () {\n    return false;\n  };\n}\n\nvar defaultEvents = ['keydown'];\n\nfunction useKeyPress(keyFilter) {\n  var eventHandler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _option$events = option.events,\n      events = _option$events === void 0 ? defaultEvents : _option$events,\n      target = option.target;\n  var element = useRef();\n  var callbackRef = useRef(eventHandler);\n  callbackRef.current = eventHandler;\n  var callbackHandler = useCallback(function (event) {\n    var genGuard = genKeyFormater(keyFilter);\n\n    if (genGuard(event)) {\n      return callbackRef.current(event);\n    }\n  }, [keyFilter]);\n  useEffect(function () {\n    var targetElement = typeof target === 'function' ? target() : target;\n    var el = element.current || targetElement || window;\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = events[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var eventName = _step2.value;\n        el.addEventListener(eventName, callbackHandler);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    return function () {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = events[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var eventName = _step3.value;\n          el.removeEventListener(eventName, callbackHandler);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    };\n  }, [events, callbackHandler, target]);\n  return element;\n}\n\nexport default useKeyPress;","map":{"version":3,"sources":["E:/github-project/cloudMusic-mobile/node_modules/@umijs/hooks/es/useKeyPress/index.js"],"names":["useEffect","useCallback","useRef","aliasKeyCodeMap","esc","tab","enter","space","up","left","right","down","delete","aliasKeyMap","modifierKey","ctrl","event","ctrlKey","shift","shiftKey","alt","altKey","meta","metaKey","noop","isType","obj","Object","prototype","toString","call","replace","toLowerCase","genFilterKey","keyFilter","type","keyCode","genArr","split","genLen","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","key","value","genModifier","aliasKey","aliasKeyCode","includes","toUpperCase","err","return","length","genKeyFormater","some","item","defaultEvents","useKeyPress","eventHandler","arguments","option","_option$events","events","target","element","callbackRef","current","callbackHandler","genGuard","targetElement","el","window","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","eventName","addEventListener","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","removeEventListener"],"mappings":"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","sourcesContent":["import { useEffect, useCallback, useRef } from 'react';\n// 键盘事件 keyCode 别名\nvar aliasKeyCodeMap = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  delete: [8, 46]\n}; // 键盘事件 key 别名\n\nvar aliasKeyMap = {\n  esc: 'Escape',\n  tab: 'Tab',\n  enter: 'Enter',\n  space: ' ',\n  // IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  delete: ['Backspace', 'Delete']\n}; // 修饰键\n\nvar modifierKey = {\n  ctrl: function ctrl(event) {\n    return event.ctrlKey;\n  },\n  shift: function shift(event) {\n    return event.shiftKey;\n  },\n  alt: function alt(event) {\n    return event.altKey;\n  },\n  meta: function meta(event) {\n    return event.metaKey;\n  }\n}; // 返回空对象\n\nvar noop = function noop() {};\n/**\n * 判断对象类型\n * @param [obj: any] 参数对象\n * @returns String\n */\n\n\nfunction isType(obj) {\n  return Object.prototype.toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n}\n/**\n * 判断按键是否激活\n * @param [event: KeyboardEvent]键盘事件\n * @param [keyFilter: any] 当前键\n * @returns Boolean\n */\n\n\nfunction genFilterKey(event, keyFilter) {\n  var type = isType(keyFilter); // 数字类型直接匹配事件的 keyCode\n\n  if (type === 'number') {\n    return event.keyCode === keyFilter;\n  } // 字符串依次判断是否有组合键\n\n\n  var genArr = keyFilter.split('.');\n  var genLen = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = genArr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var key = _step.value;\n      // 组合键\n      var genModifier = modifierKey[key]; // key 别名\n\n      var aliasKey = aliasKeyMap[key]; // keyCode 别名\n\n      var aliasKeyCode = aliasKeyCodeMap[key];\n      /**\n       * 满足以上规则\n       * 1. 自定义组合键别名\n       * 2. 自定义 key 别名\n       * 3. 自定义 keyCode 别名\n       * 4. 匹配 key 或 keyCode\n       */\n\n      if (genModifier && genModifier(event) || (aliasKey && isType(aliasKey) === 'array' ? aliasKey.includes(event.key) : aliasKey === event.key) || (aliasKeyCode && isType(aliasKeyCode) === 'array' ? aliasKeyCode.includes(event.keyCode) : aliasKeyCode === event.keyCode) || event.key.toUpperCase() === key.toUpperCase()) {\n        genLen++;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return genLen === genArr.length;\n}\n/**\n * 键盘输入预处理方法\n * @param [keyFilter: any] 当前键\n * @returns () => Boolean\n */\n\n\nfunction genKeyFormater(keyFilter) {\n  var type = isType(keyFilter);\n\n  if (type === 'function') {\n    return keyFilter;\n  }\n\n  if (type === 'string' || type === 'number') {\n    return function (event) {\n      return genFilterKey(event, keyFilter);\n    };\n  }\n\n  if (type === 'array') {\n    return function (event) {\n      return keyFilter.some(function (item) {\n        return genFilterKey(event, item);\n      });\n    };\n  }\n\n  return keyFilter ? function () {\n    return true;\n  } : function () {\n    return false;\n  };\n}\n\nvar defaultEvents = ['keydown'];\n\nfunction useKeyPress(keyFilter) {\n  var eventHandler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _option$events = option.events,\n      events = _option$events === void 0 ? defaultEvents : _option$events,\n      target = option.target;\n  var element = useRef();\n  var callbackRef = useRef(eventHandler);\n  callbackRef.current = eventHandler;\n  var callbackHandler = useCallback(function (event) {\n    var genGuard = genKeyFormater(keyFilter);\n\n    if (genGuard(event)) {\n      return callbackRef.current(event);\n    }\n  }, [keyFilter]);\n  useEffect(function () {\n    var targetElement = typeof target === 'function' ? target() : target;\n    var el = element.current || targetElement || window;\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = events[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var eventName = _step2.value;\n        el.addEventListener(eventName, callbackHandler);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    return function () {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = events[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var eventName = _step3.value;\n          el.removeEventListener(eventName, callbackHandler);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    };\n  }, [events, callbackHandler, target]);\n  return element;\n}\n\nexport default useKeyPress;"]},"metadata":{},"sourceType":"module"}
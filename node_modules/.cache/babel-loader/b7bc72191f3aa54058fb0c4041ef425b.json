{"ast":null,"code":"import React from \"react\";\nimport Axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nconst http = Axios.create({\n  baseURL: \"http://39.107.87.215:8889\"\n}); // 获取banner数据\n\nfunction useBanner() {\n  let dispatch = useDispatch();\n  return function (banner) {\n    http.get(`/banner`).then(res => {\n      //用来返回一个函数，在组件的生命周期useEffect执行\n      dispatch({\n        type: \"banner_data\",\n        data: res.data,\n        loading: false\n      });\n    });\n  };\n} //获取热门推荐数据\n\n\nfunction useRecommend() {\n  let dispatch = useDispatch(); //用来返回一个函数，在组件的生命周期useEffect执行\n\n  return function (recommend) {\n    http.get(recommend).then(res => {\n      dispatch({\n        type: \"recommend_data\",\n        data: res.data\n      });\n    });\n  };\n} //获取移动端M歌单\n\n\nfunction useMRecommend() {\n  let dispatch = useDispatch(); //用来返回一个函数，在组件的生命周期useEffect执行\n\n  return function (recommend) {\n    http.get(recommend).then(res => {\n      dispatch({\n        type: \"Mrecommend_data\",\n        data: res.data\n      });\n    });\n  };\n} //获取移动端最新音乐推荐\n\n\nfunction useMnewmusic() {\n  let dispatch = useDispatch(); //用来返回一个函数，在组件的生命周期useEffect执行\n\n  return function (recommend) {\n    http.get(recommend).then(res => {\n      dispatch({\n        type: \"MListNew_data\",\n        data: res.data\n      });\n    });\n  };\n} //获取热门推荐数据\n\n\nfunction useNewDics() {\n  let dispatch = useDispatch(); //用来返回一个函数，在组件的生命周期useEffect执行\n\n  return function (newdics) {\n    http.get(newdics).then(res => {\n      dispatch({\n        type: \"newdics_data\",\n        data: res.data\n      });\n    });\n  };\n} //获取榜单数据\n\n\nfunction useOrgdata() {\n  let dispatch = useDispatch(); //用来返回一个函数，在组件的生命周期useEffect执行\n\n  return function (Org) {\n    http.get(Org).then(res => {\n      dispatch({\n        type: \"topListOrg_data\",\n        data: res.data\n      });\n    });\n  };\n}\n\nfunction useUpdata() {\n  let dispatch = useDispatch();\n  return function (up) {\n    http.get(up).then(res => {\n      dispatch({\n        type: \"topListUp_data\",\n        data: res.data\n      });\n    });\n  };\n}\n\nfunction useNewdata() {\n  let dispatch = useDispatch();\n  return function (New) {\n    http.get(New).then(res => {\n      dispatch({\n        type: \"topListNew_data\",\n        data: res.data\n      });\n    });\n  };\n} // 获取歌单分类\n\n\nfunction usePlaylists() {\n  let dispatch = useDispatch();\n  return function (playlists) {\n    http.get(playlists).then(res => {\n      dispatch({\n        type: \"playlists_data\",\n        data: res.data,\n        loading: false\n      });\n    });\n  };\n} //获取歌单详情\n\n\nfunction usePlaydetail() {\n  let dispatch = useDispatch();\n  return function (playdetail) {\n    http.get(playdetail).then(res => {\n      dispatch({\n        type: \"playdetail_data\",\n        data: res.data,\n        loading: false\n      });\n    });\n  };\n} //获取音乐地址\n\n\nfunction useMusicurl(path) {\n  let dispatch = useDispatch();\n  return function (mucid) {\n    http.get(mucid).then(res => {\n      dispatch({\n        type: \"musicurl_data\",\n        data: res.data\n      });\n    });\n  };\n}\n\nfunction getUrl(path) {\n  return http.get(path);\n}\n\nexport { useBanner, useRecommend, useNewDics, useOrgdata, useUpdata, useNewdata, usePlaylists, usePlaydetail, useMusicurl, getUrl, useMRecommend, useMnewmusic };","map":{"version":3,"sources":["E:/github-project/cloudMusic-mobile/src/store/action/index.js"],"names":["React","Axios","useDispatch","http","create","baseURL","useBanner","dispatch","banner","get","then","res","type","data","loading","useRecommend","recommend","useMRecommend","useMnewmusic","useNewDics","newdics","useOrgdata","Org","useUpdata","up","useNewdata","New","usePlaylists","playlists","usePlaydetail","playdetail","useMusicurl","path","mucid","getUrl"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAa;AACtBC,EAAAA,OAAO,EAAC;AADc,CAAb,CAAb,C,CAIA;;AACA,SAASC,SAAT,GAAoB;AACjB,MAAIC,QAAQ,GAAGL,WAAW,EAA1B;AACA,SAAO,UAASM,MAAT,EAAgB;AACtBL,IAAAA,IAAI,CAACM,GAAL,CAAU,SAAV,EAAoBC,IAApB,CAA0BC,GAAD,IAAO;AAAG;AAC/BJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAC,aADA;AAELC,QAAAA,IAAI,EAACF,GAAG,CAACE,IAFJ;AAGLC,QAAAA,OAAO,EAAC;AAHH,OAAD,CAAR;AAKH,KAND;AAOA,GARD;AASF,C,CAED;;;AACA,SAASC,YAAT,GAAuB;AACnB,MAAIR,QAAQ,GAAGL,WAAW,EAA1B,CADmB,CACa;;AAChC,SAAO,UAASc,SAAT,EAAmB;AACtBb,IAAAA,IAAI,CAACM,GAAL,CAASO,SAAT,EAAoBN,IAApB,CAA0BC,GAAD,IAAO;AAC5BJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAC,gBADA;AAELC,QAAAA,IAAI,EAACF,GAAG,CAACE;AAFJ,OAAD,CAAR;AAIH,KALD;AAMH,GAPD;AAQH,C,CAED;;;AACA,SAASI,aAAT,GAAwB;AACpB,MAAIV,QAAQ,GAAGL,WAAW,EAA1B,CADoB,CACY;;AAChC,SAAO,UAASc,SAAT,EAAmB;AACtBb,IAAAA,IAAI,CAACM,GAAL,CAASO,SAAT,EAAoBN,IAApB,CAA0BC,GAAD,IAAO;AAC5BJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAC,iBADA;AAELC,QAAAA,IAAI,EAACF,GAAG,CAACE;AAFJ,OAAD,CAAR;AAIH,KALD;AAMH,GAPD;AAQH,C,CACD;;;AACA,SAASK,YAAT,GAAuB;AACnB,MAAIX,QAAQ,GAAGL,WAAW,EAA1B,CADmB,CACa;;AAChC,SAAO,UAASc,SAAT,EAAmB;AACtBb,IAAAA,IAAI,CAACM,GAAL,CAASO,SAAT,EAAoBN,IAApB,CAA0BC,GAAD,IAAO;AAC5BJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAC,eADA;AAELC,QAAAA,IAAI,EAACF,GAAG,CAACE;AAFJ,OAAD,CAAR;AAIH,KALD;AAMH,GAPD;AAQH,C,CAGD;;;AACA,SAASM,UAAT,GAAqB;AACjB,MAAIZ,QAAQ,GAAGL,WAAW,EAA1B,CADiB,CACe;;AAChC,SAAO,UAASkB,OAAT,EAAiB;AACpBjB,IAAAA,IAAI,CAACM,GAAL,CAASW,OAAT,EAAkBV,IAAlB,CAAwBC,GAAD,IAAO;AAC1BJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAC,cADA;AAELC,QAAAA,IAAI,EAACF,GAAG,CAACE;AAFJ,OAAD,CAAR;AAIH,KALD;AAMH,GAPD;AAQH,C,CAED;;;AACA,SAASQ,UAAT,GAAqB;AACjB,MAAId,QAAQ,GAAGL,WAAW,EAA1B,CADiB,CACe;;AAChC,SAAO,UAASoB,GAAT,EAAa;AAEhBnB,IAAAA,IAAI,CAACM,GAAL,CAASa,GAAT,EAAcZ,IAAd,CAAoBC,GAAD,IAAO;AACtBJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAC,iBADA;AAELC,QAAAA,IAAI,EAACF,GAAG,CAACE;AAFJ,OAAD,CAAR;AAIH,KALD;AAMH,GARD;AASH;;AACD,SAASU,SAAT,GAAoB;AAChB,MAAIhB,QAAQ,GAAGL,WAAW,EAA1B;AACA,SAAO,UAASsB,EAAT,EAAY;AACfrB,IAAAA,IAAI,CAACM,GAAL,CAASe,EAAT,EAAad,IAAb,CAAmBC,GAAD,IAAO;AACrBJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAC,gBADA;AAELC,QAAAA,IAAI,EAACF,GAAG,CAACE;AAFJ,OAAD,CAAR;AAIH,KALD;AAMH,GAPD;AAQH;;AACD,SAASY,UAAT,GAAqB;AACjB,MAAIlB,QAAQ,GAAGL,WAAW,EAA1B;AACA,SAAO,UAASwB,GAAT,EAAa;AAChBvB,IAAAA,IAAI,CAACM,GAAL,CAASiB,GAAT,EAAchB,IAAd,CAAoBC,GAAD,IAAO;AACtBJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAC,iBADA;AAELC,QAAAA,IAAI,EAACF,GAAG,CAACE;AAFJ,OAAD,CAAR;AAIH,KALD;AAMH,GAPD;AAQH,C,CAED;;;AAEA,SAASc,YAAT,GAAuB;AACnB,MAAIpB,QAAQ,GAAGL,WAAW,EAA1B;AACA,SAAO,UAAS0B,SAAT,EAAmB;AACtBzB,IAAAA,IAAI,CAACM,GAAL,CAASmB,SAAT,EAAoBlB,IAApB,CAA0BC,GAAD,IAAO;AAC5BJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAC,gBADA;AAELC,QAAAA,IAAI,EAACF,GAAG,CAACE,IAFJ;AAGLC,QAAAA,OAAO,EAAC;AAHH,OAAD,CAAR;AAKH,KAND;AAOH,GARD;AASH,C,CAED;;;AACA,SAASe,aAAT,GAAwB;AACpB,MAAItB,QAAQ,GAAGL,WAAW,EAA1B;AACA,SAAO,UAAS4B,UAAT,EAAoB;AACvB3B,IAAAA,IAAI,CAACM,GAAL,CAASqB,UAAT,EAAqBpB,IAArB,CAA2BC,GAAD,IAAO;AAC7BJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAC,iBADA;AAELC,QAAAA,IAAI,EAACF,GAAG,CAACE,IAFJ;AAGLC,QAAAA,OAAO,EAAC;AAHH,OAAD,CAAR;AAKH,KAND;AAOH,GARD;AASH,C,CAED;;;AACA,SAASiB,WAAT,CAAqBC,IAArB,EAA0B;AACtB,MAAIzB,QAAQ,GAAGL,WAAW,EAA1B;AACA,SAAO,UAAS+B,KAAT,EAAe;AAClB9B,IAAAA,IAAI,CAACM,GAAL,CAASwB,KAAT,EAAgBvB,IAAhB,CAAsBC,GAAD,IAAO;AACxBJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAC,eADA;AAELC,QAAAA,IAAI,EAACF,GAAG,CAACE;AAFJ,OAAD,CAAR;AAIH,KALD;AAMH,GAPD;AAQH;;AAED,SAASqB,MAAT,CAAgBF,IAAhB,EAAqB;AACjB,SAAO7B,IAAI,CAACM,GAAL,CAASuB,IAAT,CAAP;AACH;;AACD,SAAQ1B,SAAR,EAAkBS,YAAlB,EAA+BI,UAA/B,EAA0CE,UAA1C,EAAqDE,SAArD,EAA+DE,UAA/D,EAA0EE,YAA1E,EAAuFE,aAAvF,EAAqGE,WAArG,EAAiHG,MAAjH,EAAwHjB,aAAxH,EAAsIC,YAAtI","sourcesContent":["import React from \"react\"\r\nimport Axios from \"axios\"\r\nimport {useDispatch} from \"react-redux\"\r\nconst http = Axios.create({\r\n    baseURL:\"http://39.107.87.215:8889\"\r\n})\r\n\r\n// 获取banner数据\r\nfunction useBanner(){\r\n   let dispatch = useDispatch();\r\n   return function(banner){\r\n    http.get(`/banner`).then((res)=>{  //用来返回一个函数，在组件的生命周期useEffect执行\r\n        dispatch({\r\n            type:\"banner_data\",\r\n            data:res.data,\r\n            loading:false\r\n        })\r\n    })\r\n   }\r\n}\r\n\r\n//获取热门推荐数据\r\nfunction useRecommend(){\r\n    let dispatch = useDispatch();   //用来返回一个函数，在组件的生命周期useEffect执行\r\n    return function(recommend){\r\n        http.get(recommend).then((res)=>{\r\n            dispatch({\r\n                type:\"recommend_data\",\r\n                data:res.data\r\n            })\r\n        }) \r\n    }\r\n}\r\n\r\n//获取移动端M歌单\r\nfunction useMRecommend(){\r\n    let dispatch = useDispatch();   //用来返回一个函数，在组件的生命周期useEffect执行\r\n    return function(recommend){\r\n        http.get(recommend).then((res)=>{\r\n            dispatch({\r\n                type:\"Mrecommend_data\",\r\n                data:res.data\r\n            })\r\n        }) \r\n    }\r\n}\r\n//获取移动端最新音乐推荐\r\nfunction useMnewmusic(){\r\n    let dispatch = useDispatch();   //用来返回一个函数，在组件的生命周期useEffect执行\r\n    return function(recommend){\r\n        http.get(recommend).then((res)=>{\r\n            dispatch({\r\n                type:\"MListNew_data\",\r\n                data:res.data\r\n            })\r\n        }) \r\n    }\r\n}\r\n\r\n\r\n//获取热门推荐数据\r\nfunction useNewDics(){\r\n    let dispatch = useDispatch();   //用来返回一个函数，在组件的生命周期useEffect执行\r\n    return function(newdics){\r\n        http.get(newdics).then((res)=>{\r\n            dispatch({\r\n                type:\"newdics_data\",\r\n                data:res.data\r\n            })\r\n        }) \r\n    }\r\n}\r\n\r\n//获取榜单数据\r\nfunction useOrgdata(){\r\n    let dispatch = useDispatch();   //用来返回一个函数，在组件的生命周期useEffect执行\r\n    return function(Org){\r\n      \r\n        http.get(Org).then((res)=>{\r\n            dispatch({\r\n                type:\"topListOrg_data\",\r\n                data:res.data\r\n            })\r\n        });\r\n    }\r\n}\r\nfunction useUpdata(){\r\n    let dispatch = useDispatch();\r\n    return function(up){\r\n        http.get(up).then((res)=>{\r\n            dispatch({\r\n                type:\"topListUp_data\",\r\n                data:res.data\r\n            });\r\n        });\r\n    }\r\n}\r\nfunction useNewdata(){\r\n    let dispatch = useDispatch();\r\n    return function(New){\r\n        http.get(New).then((res)=>{\r\n            dispatch({\r\n                type:\"topListNew_data\",\r\n                data:res.data\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\n// 获取歌单分类\r\n\r\nfunction usePlaylists(){\r\n    let dispatch = useDispatch();\r\n    return function(playlists){\r\n        http.get(playlists).then((res)=>{\r\n            dispatch({\r\n                type:\"playlists_data\",\r\n                data:res.data,\r\n                loading:false\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\n//获取歌单详情\r\nfunction usePlaydetail(){\r\n    let dispatch = useDispatch();\r\n    return function(playdetail){\r\n        http.get(playdetail).then((res)=>{\r\n            dispatch({\r\n                type:\"playdetail_data\",\r\n                data:res.data,\r\n                loading:false\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\n//获取音乐地址\r\nfunction useMusicurl(path){\r\n    let dispatch = useDispatch();\r\n    return function(mucid){\r\n        http.get(mucid).then((res)=>{\r\n            dispatch({\r\n                type:\"musicurl_data\",\r\n                data:res.data\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\nfunction getUrl(path){\r\n    return http.get(path)\r\n}\r\nexport {useBanner,useRecommend,useNewDics,useOrgdata,useUpdata,useNewdata,usePlaylists,usePlaydetail,useMusicurl,getUrl,useMRecommend,useMnewmusic}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport useBoolean from '../useBoolean';\nexport default (function (options) {\n  var _ref = options || {},\n      dom = _ref.dom,\n      onEnter = _ref.onEnter,\n      onLeave = _ref.onLeave;\n\n  var element = useRef(null);\n  var onEnterRef = useRef(onEnter);\n  onEnterRef.current = onEnter;\n  var onLeaveRef = useRef(onLeave);\n  onLeaveRef.current = onLeave;\n\n  var _useBoolean = useBoolean(false),\n      state = _useBoolean.state,\n      setTrue = _useBoolean.setTrue,\n      setFalse = _useBoolean.setFalse;\n\n  useEffect(function () {\n    var onMouseEnter = function onMouseEnter() {\n      if (onEnterRef.current) onEnterRef.current();\n      setTrue();\n    };\n\n    var onMouseLeave = function onMouseLeave() {\n      if (onLeaveRef.current) onLeaveRef.current();\n      setFalse();\n    };\n\n    var passedInElement = typeof dom === 'function' ? dom() : dom; // 如果 传入dom\n\n    if (passedInElement) {\n      passedInElement.addEventListener('mouseenter', onMouseEnter);\n      passedInElement.addEventListener('mouseleave', onMouseLeave);\n      return function () {\n        passedInElement.removeEventListener('mouseenter', onMouseEnter);\n        passedInElement.removeEventListener('mouseleave', onMouseLeave);\n      };\n    }\n\n    var node = element.current;\n\n    if (node) {\n      node.addEventListener('mouseenter', onMouseEnter);\n      node.addEventListener('mouseleave', onMouseLeave);\n      return function () {\n        node.removeEventListener('mouseenter', onMouseEnter);\n        node.removeEventListener('mouseleave', onMouseLeave);\n      };\n    }\n  }, [element.current, typeof dom === 'function' ? undefined : dom]);\n\n  if (dom) {\n    return [!!state];\n  }\n\n  return [!!state, element];\n});","map":{"version":3,"sources":["E:/github-project/cloudMusic-mobile/node_modules/@umijs/hooks/es/useHover/index.js"],"names":["useEffect","useRef","useBoolean","options","_ref","dom","onEnter","onLeave","element","onEnterRef","current","onLeaveRef","_useBoolean","state","setTrue","setFalse","onMouseEnter","onMouseLeave","passedInElement","addEventListener","removeEventListener","node","undefined"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,gBAAgB,UAAUC,OAAV,EAAmB;AACjC,MAAIC,IAAI,GAAGD,OAAO,IAAI,EAAtB;AAAA,MACIE,GAAG,GAAGD,IAAI,CAACC,GADf;AAAA,MAEIC,OAAO,GAAGF,IAAI,CAACE,OAFnB;AAAA,MAGIC,OAAO,GAAGH,IAAI,CAACG,OAHnB;;AAKA,MAAIC,OAAO,GAAGP,MAAM,CAAC,IAAD,CAApB;AACA,MAAIQ,UAAU,GAAGR,MAAM,CAACK,OAAD,CAAvB;AACAG,EAAAA,UAAU,CAACC,OAAX,GAAqBJ,OAArB;AACA,MAAIK,UAAU,GAAGV,MAAM,CAACM,OAAD,CAAvB;AACAI,EAAAA,UAAU,CAACD,OAAX,GAAqBH,OAArB;;AAEA,MAAIK,WAAW,GAAGV,UAAU,CAAC,KAAD,CAA5B;AAAA,MACIW,KAAK,GAAGD,WAAW,CAACC,KADxB;AAAA,MAEIC,OAAO,GAAGF,WAAW,CAACE,OAF1B;AAAA,MAGIC,QAAQ,GAAGH,WAAW,CAACG,QAH3B;;AAKAf,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIgB,YAAY,GAAG,SAASA,YAAT,GAAwB;AACzC,UAAIP,UAAU,CAACC,OAAf,EAAwBD,UAAU,CAACC,OAAX;AACxBI,MAAAA,OAAO;AACR,KAHD;;AAKA,QAAIG,YAAY,GAAG,SAASA,YAAT,GAAwB;AACzC,UAAIN,UAAU,CAACD,OAAf,EAAwBC,UAAU,CAACD,OAAX;AACxBK,MAAAA,QAAQ;AACT,KAHD;;AAKA,QAAIG,eAAe,GAAG,OAAOb,GAAP,KAAe,UAAf,GAA4BA,GAAG,EAA/B,GAAoCA,GAA1D,CAXoB,CAW2C;;AAE/D,QAAIa,eAAJ,EAAqB;AACnBA,MAAAA,eAAe,CAACC,gBAAhB,CAAiC,YAAjC,EAA+CH,YAA/C;AACAE,MAAAA,eAAe,CAACC,gBAAhB,CAAiC,YAAjC,EAA+CF,YAA/C;AACA,aAAO,YAAY;AACjBC,QAAAA,eAAe,CAACE,mBAAhB,CAAoC,YAApC,EAAkDJ,YAAlD;AACAE,QAAAA,eAAe,CAACE,mBAAhB,CAAoC,YAApC,EAAkDH,YAAlD;AACD,OAHD;AAID;;AAED,QAAII,IAAI,GAAGb,OAAO,CAACE,OAAnB;;AAEA,QAAIW,IAAJ,EAAU;AACRA,MAAAA,IAAI,CAACF,gBAAL,CAAsB,YAAtB,EAAoCH,YAApC;AACAK,MAAAA,IAAI,CAACF,gBAAL,CAAsB,YAAtB,EAAoCF,YAApC;AACA,aAAO,YAAY;AACjBI,QAAAA,IAAI,CAACD,mBAAL,CAAyB,YAAzB,EAAuCJ,YAAvC;AACAK,QAAAA,IAAI,CAACD,mBAAL,CAAyB,YAAzB,EAAuCH,YAAvC;AACD,OAHD;AAID;AACF,GAhCQ,EAgCN,CAACT,OAAO,CAACE,OAAT,EAAkB,OAAOL,GAAP,KAAe,UAAf,GAA4BiB,SAA5B,GAAwCjB,GAA1D,CAhCM,CAAT;;AAkCA,MAAIA,GAAJ,EAAS;AACP,WAAO,CAAC,CAAC,CAACQ,KAAH,CAAP;AACD;;AAED,SAAO,CAAC,CAAC,CAACA,KAAH,EAAUL,OAAV,CAAP;AACD,CAxDD","sourcesContent":["import { useEffect, useRef } from 'react';\nimport useBoolean from '../useBoolean';\nexport default (function (options) {\n  var _ref = options || {},\n      dom = _ref.dom,\n      onEnter = _ref.onEnter,\n      onLeave = _ref.onLeave;\n\n  var element = useRef(null);\n  var onEnterRef = useRef(onEnter);\n  onEnterRef.current = onEnter;\n  var onLeaveRef = useRef(onLeave);\n  onLeaveRef.current = onLeave;\n\n  var _useBoolean = useBoolean(false),\n      state = _useBoolean.state,\n      setTrue = _useBoolean.setTrue,\n      setFalse = _useBoolean.setFalse;\n\n  useEffect(function () {\n    var onMouseEnter = function onMouseEnter() {\n      if (onEnterRef.current) onEnterRef.current();\n      setTrue();\n    };\n\n    var onMouseLeave = function onMouseLeave() {\n      if (onLeaveRef.current) onLeaveRef.current();\n      setFalse();\n    };\n\n    var passedInElement = typeof dom === 'function' ? dom() : dom; // 如果 传入dom\n\n    if (passedInElement) {\n      passedInElement.addEventListener('mouseenter', onMouseEnter);\n      passedInElement.addEventListener('mouseleave', onMouseLeave);\n      return function () {\n        passedInElement.removeEventListener('mouseenter', onMouseEnter);\n        passedInElement.removeEventListener('mouseleave', onMouseLeave);\n      };\n    }\n\n    var node = element.current;\n\n    if (node) {\n      node.addEventListener('mouseenter', onMouseEnter);\n      node.addEventListener('mouseleave', onMouseLeave);\n      return function () {\n        node.removeEventListener('mouseenter', onMouseEnter);\n        node.removeEventListener('mouseleave', onMouseLeave);\n      };\n    }\n  }, [element.current, typeof dom === 'function' ? undefined : dom]);\n\n  if (dom) {\n    return [!!state];\n  }\n\n  return [!!state, element];\n});"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import useAsync from '../useAsync';\n\nfunction _await(value, then, direct) {\n  if (direct) {\n    return then ? then(value) : value;\n  }\n\n  if (!value || !value.then) {\n    value = Promise.resolve(value);\n  }\n\n  return then ? value.then(then) : value;\n}\n\nvar globalMethod;\n\nfunction _async(f) {\n  return function () {\n    for (var args = [], i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    try {\n      return Promise.resolve(f.apply(this, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nexport var configRequest = function configRequest(method) {\n  globalMethod = method;\n};\n\nvar useAPI = function useAPI(opt) {\n  var requestMethod = opt.method || globalMethod || fetch;\n  return useAsync(_async(function () {\n    return _await(requestMethod(opt.url, opt.options), function (res) {\n      return res.json && typeof res.json === 'function' ? res.json() : res;\n    });\n  }), [JSON.stringify(opt)], {\n    manual: opt.manual,\n    pollingInterval: opt.pollingInterval,\n    onError: opt.onError,\n    onSuccess: opt.onSuccess\n  });\n};\n\nexport default useAPI;","map":{"version":3,"sources":["E:/github-project/cloudMusic-mobile/node_modules/@umijs/hooks/es/useAPI/index.js"],"names":["useAsync","_await","value","then","direct","Promise","resolve","globalMethod","_async","f","args","i","arguments","length","apply","e","reject","configRequest","method","useAPI","opt","requestMethod","fetch","url","options","res","json","JSON","stringify","manual","pollingInterval","onError","onSuccess"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqC;AACnC,MAAIA,MAAJ,EAAY;AACV,WAAOD,IAAI,GAAGA,IAAI,CAACD,KAAD,CAAP,GAAiBA,KAA5B;AACD;;AAED,MAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACC,IAArB,EAA2B;AACzBD,IAAAA,KAAK,GAAGG,OAAO,CAACC,OAAR,CAAgBJ,KAAhB,CAAR;AACD;;AAED,SAAOC,IAAI,GAAGD,KAAK,CAACC,IAAN,CAAWA,IAAX,CAAH,GAAsBD,KAAjC;AACD;;AAED,IAAIK,YAAJ;;AAEA,SAASC,MAAT,CAAgBC,CAAhB,EAAmB;AACjB,SAAO,YAAY;AACjB,SAAK,IAAIC,IAAI,GAAG,EAAX,EAAeC,CAAC,GAAG,CAAxB,EAA2BA,CAAC,GAAGC,SAAS,CAACC,MAAzC,EAAiDF,CAAC,EAAlD,EAAsD;AACpDD,MAAAA,IAAI,CAACC,CAAD,CAAJ,GAAUC,SAAS,CAACD,CAAD,CAAnB;AACD;;AAED,QAAI;AACF,aAAON,OAAO,CAACC,OAAR,CAAgBG,CAAC,CAACK,KAAF,CAAQ,IAAR,EAAcJ,IAAd,CAAhB,CAAP;AACD,KAFD,CAEE,OAAOK,CAAP,EAAU;AACV,aAAOV,OAAO,CAACW,MAAR,CAAeD,CAAf,CAAP;AACD;AACF,GAVD;AAWD;;AAED,OAAO,IAAIE,aAAa,GAAG,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AACxDX,EAAAA,YAAY,GAAGW,MAAf;AACD,CAFM;;AAIP,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AAChC,MAAIC,aAAa,GAAGD,GAAG,CAACF,MAAJ,IAAcX,YAAd,IAA8Be,KAAlD;AACA,SAAOtB,QAAQ,CAACQ,MAAM,CAAC,YAAY;AACjC,WAAOP,MAAM,CAACoB,aAAa,CAACD,GAAG,CAACG,GAAL,EAAUH,GAAG,CAACI,OAAd,CAAd,EAAsC,UAAUC,GAAV,EAAe;AAChE,aAAOA,GAAG,CAACC,IAAJ,IAAY,OAAOD,GAAG,CAACC,IAAX,KAAoB,UAAhC,GAA6CD,GAAG,CAACC,IAAJ,EAA7C,GAA0DD,GAAjE;AACD,KAFY,CAAb;AAGD,GAJqB,CAAP,EAIX,CAACE,IAAI,CAACC,SAAL,CAAeR,GAAf,CAAD,CAJW,EAIY;AACzBS,IAAAA,MAAM,EAAET,GAAG,CAACS,MADa;AAEzBC,IAAAA,eAAe,EAAEV,GAAG,CAACU,eAFI;AAGzBC,IAAAA,OAAO,EAAEX,GAAG,CAACW,OAHY;AAIzBC,IAAAA,SAAS,EAAEZ,GAAG,CAACY;AAJU,GAJZ,CAAf;AAUD,CAZD;;AAcA,eAAeb,MAAf","sourcesContent":["import useAsync from '../useAsync';\n\nfunction _await(value, then, direct) {\n  if (direct) {\n    return then ? then(value) : value;\n  }\n\n  if (!value || !value.then) {\n    value = Promise.resolve(value);\n  }\n\n  return then ? value.then(then) : value;\n}\n\nvar globalMethod;\n\nfunction _async(f) {\n  return function () {\n    for (var args = [], i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    try {\n      return Promise.resolve(f.apply(this, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nexport var configRequest = function configRequest(method) {\n  globalMethod = method;\n};\n\nvar useAPI = function useAPI(opt) {\n  var requestMethod = opt.method || globalMethod || fetch;\n  return useAsync(_async(function () {\n    return _await(requestMethod(opt.url, opt.options), function (res) {\n      return res.json && typeof res.json === 'function' ? res.json() : res;\n    });\n  }), [JSON.stringify(opt)], {\n    manual: opt.manual,\n    pollingInterval: opt.pollingInterval,\n    onError: opt.onError,\n    onSuccess: opt.onSuccess\n  });\n};\n\nexport default useAPI;"]},"metadata":{},"sourceType":"module"}
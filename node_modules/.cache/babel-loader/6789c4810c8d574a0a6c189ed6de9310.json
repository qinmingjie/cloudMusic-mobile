{"ast":null,"code":"var _jsxFileName = \"E:\\\\github-project\\\\cloudMusic-mobile\\\\src\\\\mobileconponemt\\\\msonglist.js\";\nimport React, { useEffect, Fragment, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { usePlaydetail } from \"../store/action/index\";\nimport DetailTitle from \"../component/detailtitle\";\nimport { NavLink } from \"react-router-dom\";\nimport qs from \"qs\";\nexport default function MSongList() {\n  let [show, setShow] = useState(false); //获取地址栏中传过来的id以便于请求数据\n\n  let {\n    id\n  } = qs.parse(useLocation().search.slice(1)); //获取状态管理函数来管理歌单详情数据\n\n  let state = useSelector(state => {\n    return state.detailReducer;\n  }); //获取状态操作函数来请求数据\n\n  let getData = usePlaydetail();\n  useEffect(() => {\n    getData(`/playlist/detail?id=${id}`);\n  }, [id]); //结构出需要的数据\n\n  console.log(state);\n  let {\n    playlist\n  } = state.data;\n  let data = playlist;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, data ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-detailWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-detailCoverImg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-cover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: data.coverImgUrl,\n    className: \"j-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"m-txt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, data.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"m-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"m-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: data.creator.avatarUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  })), data.creator.nickname)))) : \"\");\n}","map":{"version":3,"sources":["E:/github-project/cloudMusic-mobile/src/mobileconponemt/msonglist.js"],"names":["React","useEffect","Fragment","useState","useLocation","useSelector","usePlaydetail","DetailTitle","NavLink","qs","MSongList","show","setShow","id","parse","search","slice","state","detailReducer","getData","console","log","playlist","data","coverImgUrl","name","creator","avatarUrl","nickname"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,aAAR,QAA4B,uBAA5B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,eAAe,SAASC,SAAT,GAAoB;AAC/B,MAAI,CAACC,IAAD,EAAMC,OAAN,IAAiBT,QAAQ,CAAC,KAAD,CAA7B,CAD+B,CAE/B;;AACA,MAAI;AAACU,IAAAA;AAAD,MAAOJ,EAAE,CAACK,KAAH,CAASV,WAAW,GAAGW,MAAd,CAAqBC,KAArB,CAA2B,CAA3B,CAAT,CAAX,CAH+B,CAK/B;;AACA,MAAIC,KAAK,GAAGZ,WAAW,CAAEY,KAAD,IAAS;AAC7B,WAAOA,KAAK,CAACC,aAAb;AACH,GAFsB,CAAvB,CAN+B,CAS/B;;AACA,MAAIC,OAAO,GAAGb,aAAa,EAA3B;AAEAL,EAAAA,SAAS,CAAC,MAAI;AACVkB,IAAAA,OAAO,CAAE,uBAAsBN,EAAG,EAA3B,CAAP;AACH,GAFQ,EAEP,CAACA,EAAD,CAFO,CAAT,CAZ+B,CAe/B;;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,MAAI;AAACK,IAAAA;AAAD,MAAaL,KAAK,CAACM,IAAvB;AACA,MAAIA,IAAI,GAAGD,QAAX;AACA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMC,IAAI,gBACN;AAAK,IAAA,SAAS,EAAE,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,WAAf;AAA4B,IAAA,SAAS,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBD,IAAI,CAACE,IAA3B,CADJ,eAEI;AAAG,IAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEF,IAAI,CAACG,OAAL,CAAaC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKKJ,IAAI,CAACG,OAAL,CAAaE,QALlB,CAFJ,CAJJ,CADJ,CADM,GAkFF,EAnFR,CADJ;AAuFH","sourcesContent":["import React,{useEffect, Fragment,useState} from \"react\"\r\nimport {useLocation} from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {usePlaydetail} from \"../store/action/index\"\r\nimport DetailTitle from \"../component/detailtitle\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport qs from \"qs\"\r\nexport default function MSongList(){\r\n    let [show,setShow] = useState(false)\r\n    //获取地址栏中传过来的id以便于请求数据\r\n    let {id} = qs.parse(useLocation().search.slice(1))\r\n\r\n    //获取状态管理函数来管理歌单详情数据\r\n    let state = useSelector((state)=>{\r\n        return state.detailReducer\r\n    })\r\n    //获取状态操作函数来请求数据\r\n    let getData = usePlaydetail()\r\n\r\n    useEffect(()=>{\r\n        getData(`/playlist/detail?id=${id}`)\r\n    },[id])\r\n    //结构出需要的数据\r\n    console.log(state)\r\n    let {playlist} = state.data\r\n    let data = playlist\r\n    return (\r\n        <Fragment>\r\n             {data?\r\n            <div className={\"m-detailWrap\"}> \r\n                <div className={\"m-detailCoverImg\"}>\r\n                    <div className=\"m-cover\">\r\n                        <img src={data.coverImgUrl} className=\"j-img\"/>\r\n                    </div>\r\n                    <div className=\"m-title\">\r\n                        <p className=\"m-txt\">{data.name}</p>\r\n                        <p className=\"m-icons\">\r\n                            <span className=\"m-icon\">\r\n                                <img src={data.creator.avatarUrl}/>\r\n                                <i></i>\r\n                            </span>\r\n                            {data.creator.nickname}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                {/** \r\n                    <div className={\"m-detailTxt\"}>\r\n                        <div className=\"\">\r\n                            <div className={\"m-detailTiile\"}>\r\n                                <i className={\"m-detailIcon1\"}><span className=\"\" ></span></i>\r\n                                <div className=\"\">\r\n                                    <h2 className={\"m-detailh2\"}>{data.name}</h2>\r\n                                </div>\r\n                            </div>\r\n                            <div className={\"m-detailIcon2\"}>\r\n                                <i className={\"m-detailFace\"} ><img src={data.creator.avatarUrl}/></i>\r\n                                <span className=\"name\">\r\n                                <i  className=\"s-fc7\">{data.creator.nickname}</i>\r\n                                </span>\r\n                                <sup className={\"m-detailIcon3\"}>&nbsp;</sup>\r\n                                <span className={\"m-detailTime\"}>2020-3-1 创建</span>\r\n                            </div>\r\n                            <div id=\"content-operation\" className={\"m-detailIcons\"}>\r\n                                <div className={\"m-detailIcons1\"} title=\"播放\">\r\n                                    <i>\r\n                                        <em className=\"ply\"></em>播放\r\n                                    </i>\r\n                                </div>\r\n                                <div className={\"m-detailIcons2\"} hidefocus=\"true\" title=\"添加到播放列表\"></div>\r\n                                <div  className={\"m-detailIcons3\"} >\r\n                                    <i>({String(data.playCount).slice(0,4)})</i>\r\n                                </div>\r\n                                <div className={\"m-detailIcons4\"}>\r\n                                    <i>({String(data.shareCount).slice(0,4)})</i>\r\n                                </div>\r\n                                <div className={\"m-detailIcons5\"}>\r\n                                    <i>(<span id=\"cnt_comment_count\">{String(data.commentCount).slice(0,4)}</span>)</i>\r\n                                </div>\r\n                            </div>\r\n                            <div className={\"m-detailTags\"}>\r\n                                <b>标签：</b>\r\n                                {data.tags.map((item,index)=>{\r\n                                    return <NavLink key={item} to={`/index/playlist?cat=${item}&limit=100&page=1`}><i>{item}</i></NavLink>\r\n                                })}\r\n                            </div>\r\n                            <div id=\"album-desc-more\" className=\"intr f-brk\">\r\n                                <p \r\n                                    className={\"m-detailSclieTxt\"}\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html:(data.description.replace(/\\n/g,`</br>`).length)<140?(\"介绍：\"+(data.description.replace(/\\n/g,`</br>`))):(\"介绍：\"+(data.description.replace(/\\n/g,`</br>`).slice(0,140) + \"...\"))\r\n                                    }}\r\n                                    style={show?{display:\"none\"}:{display:\"block\"}}\r\n                                >\r\n                                </p>\r\n                                <p \r\n                                    className={\"m-detailSclieAll\"}\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html:\"介绍：\" + (data.description.replace(/\\n/g,`</br>`))\r\n                                    }}\r\n                                    style={!show?{display:\"none\"}:{display:\"block\"}}\r\n                                >\r\n                                </p>\r\n                                {(data.description.replace(/\\n/g,`</br>`).length<140)?\"\":<div className={\"m-detailSelect\"}><span onClick={()=>{\r\n                                setShow(!show)\r\n                                }}>{show?\"收起\":\"展开\"}<i id={show?\"detailShow\":\"\"}></i></span></div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>:\"\"\r\n            */}\r\n         </div>:\"\"}\r\n        </Fragment>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
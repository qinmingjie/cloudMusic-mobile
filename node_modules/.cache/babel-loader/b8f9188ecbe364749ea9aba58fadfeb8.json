{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport { useState, useRef, useCallback } from 'react';\nexport default (function (initialValue) {\n  var counterRef = useRef(-1); // key 存储器\n\n  var keyList = useRef([]); // 内部方法\n\n  var setKey = useCallback(function (index) {\n    counterRef.current += 1;\n    keyList.current.splice(index, 0, counterRef.current);\n  }, []);\n\n  var _useState = useState(function () {\n    (initialValue || []).forEach(function (_, index) {\n      setKey(index);\n    });\n    return initialValue || [];\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  var resetList = function resetList() {\n    var newList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    keyList.current = [];\n    counterRef.current = -1;\n    setList(function () {\n      (newList || []).forEach(function (_, index) {\n        setKey(index);\n      });\n      return newList || [];\n    });\n  };\n\n  var insert = function insert(index, obj) {\n    setList(function (l) {\n      var temp = _toConsumableArray(l);\n\n      temp.splice(index, 0, obj);\n      setKey(index);\n      return temp;\n    });\n  };\n\n  var getKey = function getKey(index) {\n    return keyList.current[index];\n  };\n\n  var getIndex = function getIndex(index) {\n    return keyList.current.findIndex(function (ele) {\n      return ele === index;\n    });\n  };\n\n  var merge = function merge(index, obj) {\n    setList(function (l) {\n      var temp = _toConsumableArray(l);\n\n      obj.forEach(function (_, i) {\n        setKey(index + i);\n      });\n      temp.splice.apply(temp, [index, 0].concat(_toConsumableArray(obj)));\n      return temp;\n    });\n  };\n\n  var replace = function replace(index, obj) {\n    setList(function (l) {\n      var temp = _toConsumableArray(l);\n\n      temp[index] = obj;\n      return temp;\n    });\n  };\n\n  var remove = function remove(index) {\n    setList(function (l) {\n      var temp = _toConsumableArray(l);\n\n      temp.splice(index, 1); // remove keys if necessary\n\n      try {\n        keyList.current.splice(index, 1);\n      } catch (e) {\n        console.error(e);\n      }\n\n      return temp;\n    });\n  };\n\n  var move = function move(oldIndex, newIndex) {\n    if (oldIndex === newIndex) {\n      return;\n    }\n\n    setList(function (l) {\n      var newList = _toConsumableArray(l);\n\n      var temp = newList.filter(function (_, index) {\n        return index !== oldIndex;\n      });\n      temp.splice(newIndex, 0, newList[oldIndex]); // move keys if necessary\n\n      try {\n        var keyTemp = keyList.current.filter(function (_, index) {\n          return index !== oldIndex;\n        });\n        keyTemp.splice(newIndex, 0, keyList.current[oldIndex]);\n        keyList.current = keyTemp;\n      } catch (e) {\n        console.error(e);\n      }\n\n      return temp;\n    });\n  };\n\n  var push = function push(obj) {\n    setList(function (l) {\n      setKey(l.length);\n      return l.concat([obj]);\n    });\n  };\n\n  var pop = function pop() {\n    // remove keys if necessary\n    try {\n      keyList.current = keyList.current.slice(0, keyList.current.length - 1);\n    } catch (e) {\n      console.error(e);\n    }\n\n    setList(function (l) {\n      return l.slice(0, l.length - 1);\n    });\n  };\n\n  var unshift = function unshift(obj) {\n    setList(function (l) {\n      setKey(0);\n      return [obj].concat(l);\n    });\n  };\n\n  var sortForm = function sortForm(result) {\n    return result.map(function (item, index) {\n      return {\n        key: index,\n        item: item\n      };\n    }) // add index into obj\n    .sort(function (a, b) {\n      return getIndex(a.key) - getIndex(b.key);\n    }) // sort based on the index of table\n    .filter(function (item) {\n      return !!item.item;\n    }) // remove undefined(s)\n    .map(function (item) {\n      return item.item;\n    });\n  }; // retrive the data\n\n\n  var shift = function shift() {\n    // remove keys if necessary\n    try {\n      keyList.current = keyList.current.slice(1, keyList.current.length);\n    } catch (e) {\n      console.error(e);\n    }\n\n    setList(function (l) {\n      return l.slice(1, l.length);\n    });\n  };\n\n  return {\n    list: list,\n    insert: insert,\n    merge: merge,\n    replace: replace,\n    remove: remove,\n    getKey: getKey,\n    getIndex: getIndex,\n    move: move,\n    push: push,\n    pop: pop,\n    unshift: unshift,\n    shift: shift,\n    sortForm: sortForm,\n    resetList: resetList\n  };\n});","map":{"version":3,"sources":["E:/github-project/cloudMusic-mobile/node_modules/@umijs/hooks/es/useDynamicList/index.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","isArray","i","arr2","length","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","err","useState","useRef","useCallback","initialValue","counterRef","keyList","setKey","index","current","splice","_useState","forEach","_","_useState2","list","setList","resetList","newList","arguments","insert","obj","l","temp","getKey","getIndex","findIndex","ele","merge","apply","concat","replace","remove","e","console","error","move","oldIndex","newIndex","filter","keyTemp","pop","slice","unshift","sortForm","result","map","item","key","sort","a","b","shift"],"mappings":"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","sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { useState, useRef, useCallback } from 'react';\nexport default (function (initialValue) {\n  var counterRef = useRef(-1); // key 存储器\n\n  var keyList = useRef([]); // 内部方法\n\n  var setKey = useCallback(function (index) {\n    counterRef.current += 1;\n    keyList.current.splice(index, 0, counterRef.current);\n  }, []);\n\n  var _useState = useState(function () {\n    (initialValue || []).forEach(function (_, index) {\n      setKey(index);\n    });\n    return initialValue || [];\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  var resetList = function resetList() {\n    var newList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    keyList.current = [];\n    counterRef.current = -1;\n    setList(function () {\n      (newList || []).forEach(function (_, index) {\n        setKey(index);\n      });\n      return newList || [];\n    });\n  };\n\n  var insert = function insert(index, obj) {\n    setList(function (l) {\n      var temp = _toConsumableArray(l);\n\n      temp.splice(index, 0, obj);\n      setKey(index);\n      return temp;\n    });\n  };\n\n  var getKey = function getKey(index) {\n    return keyList.current[index];\n  };\n\n  var getIndex = function getIndex(index) {\n    return keyList.current.findIndex(function (ele) {\n      return ele === index;\n    });\n  };\n\n  var merge = function merge(index, obj) {\n    setList(function (l) {\n      var temp = _toConsumableArray(l);\n\n      obj.forEach(function (_, i) {\n        setKey(index + i);\n      });\n      temp.splice.apply(temp, [index, 0].concat(_toConsumableArray(obj)));\n      return temp;\n    });\n  };\n\n  var replace = function replace(index, obj) {\n    setList(function (l) {\n      var temp = _toConsumableArray(l);\n\n      temp[index] = obj;\n      return temp;\n    });\n  };\n\n  var remove = function remove(index) {\n    setList(function (l) {\n      var temp = _toConsumableArray(l);\n\n      temp.splice(index, 1); // remove keys if necessary\n\n      try {\n        keyList.current.splice(index, 1);\n      } catch (e) {\n        console.error(e);\n      }\n\n      return temp;\n    });\n  };\n\n  var move = function move(oldIndex, newIndex) {\n    if (oldIndex === newIndex) {\n      return;\n    }\n\n    setList(function (l) {\n      var newList = _toConsumableArray(l);\n\n      var temp = newList.filter(function (_, index) {\n        return index !== oldIndex;\n      });\n      temp.splice(newIndex, 0, newList[oldIndex]); // move keys if necessary\n\n      try {\n        var keyTemp = keyList.current.filter(function (_, index) {\n          return index !== oldIndex;\n        });\n        keyTemp.splice(newIndex, 0, keyList.current[oldIndex]);\n        keyList.current = keyTemp;\n      } catch (e) {\n        console.error(e);\n      }\n\n      return temp;\n    });\n  };\n\n  var push = function push(obj) {\n    setList(function (l) {\n      setKey(l.length);\n      return l.concat([obj]);\n    });\n  };\n\n  var pop = function pop() {\n    // remove keys if necessary\n    try {\n      keyList.current = keyList.current.slice(0, keyList.current.length - 1);\n    } catch (e) {\n      console.error(e);\n    }\n\n    setList(function (l) {\n      return l.slice(0, l.length - 1);\n    });\n  };\n\n  var unshift = function unshift(obj) {\n    setList(function (l) {\n      setKey(0);\n      return [obj].concat(l);\n    });\n  };\n\n  var sortForm = function sortForm(result) {\n    return result.map(function (item, index) {\n      return {\n        key: index,\n        item: item\n      };\n    }) // add index into obj\n    .sort(function (a, b) {\n      return getIndex(a.key) - getIndex(b.key);\n    }) // sort based on the index of table\n    .filter(function (item) {\n      return !!item.item;\n    }) // remove undefined(s)\n    .map(function (item) {\n      return item.item;\n    });\n  }; // retrive the data\n\n\n  var shift = function shift() {\n    // remove keys if necessary\n    try {\n      keyList.current = keyList.current.slice(1, keyList.current.length);\n    } catch (e) {\n      console.error(e);\n    }\n\n    setList(function (l) {\n      return l.slice(1, l.length);\n    });\n  };\n\n  return {\n    list: list,\n    insert: insert,\n    merge: merge,\n    replace: replace,\n    remove: remove,\n    getKey: getKey,\n    getIndex: getIndex,\n    move: move,\n    push: push,\n    pop: pop,\n    unshift: unshift,\n    shift: shift,\n    sortForm: sortForm,\n    resetList: resetList\n  };\n});"]},"metadata":{},"sourceType":"module"}
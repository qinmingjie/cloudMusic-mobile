{"ast":null,"code":"var _jsxFileName = \"E:\\\\github-project\\\\cloudMusic-mobile\\\\src\\\\component\\\\pagenation.js\";\nimport React, { Fragment, useState } from \"react\";\nimport { useLocation, Link, NavLink } from \"react-router-dom\";\nimport qs from \"qs\";\nexport default function PageNation(props) {\n  let {\n    num,\n    fn\n  } = props;\n  let pageList = 20; //每篇显示多少个\n\n  let pageLocation = Math.ceil(num / pageList); //获取地址来判断是哪个分类的分页\n\n  let {\n    pathname\n  } = useLocation();\n  let {\n    cat,\n    limit,\n    page\n  } = qs.parse(useLocation().search.slice(1));\n  let [locationPage, setPage] = useState(0);\n  console.log(page);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: `${pathname}?cat=${cat}&limit=${limit}&page=${page > 1 && page <= 5 ? Number(page) - 1 : page}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"\\u4E0A\\u4E00\\u9875\"), [...\".\".repeat(pageLocation)].map((item, index) => {\n    return /*#__PURE__*/React.createElement(NavLink, {\n      activeClassName: \"active\",\n      to: `${pathname}?cat=${cat}&limit=${limit}&page=${index + 1}`,\n      key: index,\n      onClick: () => {\n        fn(index);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 24\n      }\n    }, index + 1);\n  }), /*#__PURE__*/React.createElement(NavLink, {\n    to: `${pathname}?cat=${cat}&limit=${limit}&page=${page <= 5 && page > 0 ? Number(page) + 1 : page}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"\\u4E0B\\u4E00\\u9875\"));\n}","map":{"version":3,"sources":["E:/github-project/cloudMusic-mobile/src/component/pagenation.js"],"names":["React","Fragment","useState","useLocation","Link","NavLink","qs","PageNation","props","num","fn","pageList","pageLocation","Math","ceil","pathname","cat","limit","page","parse","search","slice","locationPage","setPage","console","log","Number","repeat","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAAQC,WAAR,EAAoBC,IAApB,EAA0BC,OAA1B,QAAwC,kBAAxC;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AACrC,MAAI;AAACC,IAAAA,GAAD;AAAKC,IAAAA;AAAL,MAAWF,KAAf;AACA,MAAIG,QAAQ,GAAG,EAAf,CAFqC,CAElB;;AACnB,MAAIC,YAAY,GAAGC,IAAI,CAACC,IAAL,CAAUL,GAAG,GAACE,QAAd,CAAnB,CAHqC,CAIrC;;AACA,MAAI;AAACI,IAAAA;AAAD,MAAaZ,WAAW,EAA5B;AACA,MAAI;AAACa,IAAAA,GAAD;AAAKC,IAAAA,KAAL;AAAWC,IAAAA;AAAX,MAAmBZ,EAAE,CAACa,KAAH,CAAShB,WAAW,GAAGiB,MAAd,CAAqBC,KAArB,CAA2B,CAA3B,CAAT,CAAvB;AACA,MAAI,CAACC,YAAD,EAAcC,OAAd,IAAyBrB,QAAQ,CAAC,CAAD,CAArC;AACAsB,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAG,GAAEH,QAAS,QAAOC,GAAI,UAASC,KAAM,SAASC,IAAI,GAAC,CAAL,IAAQA,IAAI,IAAE,CAAd,GAAgBQ,MAAM,CAACR,IAAD,CAAN,GAAa,CAA7B,GAA+BA,IAAM,EAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAGQ,CAAC,GAAG,IAAIS,MAAJ,CAAWf,YAAX,CAAJ,EAA8BgB,GAA9B,CAAkC,CAACC,IAAD,EAAMC,KAAN,KAAc;AAChD,wBAAO,oBAAC,OAAD;AAAS,MAAA,eAAe,EAAC,QAAzB;AAAkC,MAAA,EAAE,EAAG,GAAEf,QAAS,QAAOC,GAAI,UAASC,KAAM,SAAQa,KAAK,GAAC,CAAE,EAA5F;AAA+F,MAAA,GAAG,EAAEA,KAApG;AAA2G,MAAA,OAAO,EAAE,MAAI;AAC3HpB,QAAAA,EAAE,CAACoB,KAAD,CAAF;AACH,OAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEHA,KAAK,GAAC,CAFH,CAAP;AAGC,GAJD,CAHR,eASI,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAG,GAAEf,QAAS,QAAOC,GAAI,UAASC,KAAM,SAASC,IAAI,IAAE,CAAN,IAASA,IAAI,GAAC,CAAd,GAAgBQ,MAAM,CAACR,IAAD,CAAN,GAAa,CAA7B,GAA+BA,IAAM,EAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BATJ,CADJ;AAcH","sourcesContent":["import React, { Fragment, useState } from \"react\"\r\nimport {useLocation,Link, NavLink} from \"react-router-dom\"\r\nimport qs from \"qs\"\r\nexport default function PageNation(props){\r\n    let {num,fn} = props\r\n    let pageList = 20; //每篇显示多少个\r\n    let pageLocation = Math.ceil(num/pageList)\r\n    //获取地址来判断是哪个分类的分页\r\n    let {pathname} = useLocation()\r\n    let {cat,limit,page} = qs.parse(useLocation().search.slice(1))\r\n    let [locationPage,setPage] = useState(0)\r\n    console.log(page)\r\n    return(\r\n        <Fragment>\r\n            <NavLink to={`${pathname}?cat=${cat}&limit=${limit}&page=${(page>1&&page<=5?Number(page)-1:page)}`}>上一页</NavLink>\r\n            {\r\n                [...\".\".repeat(pageLocation)].map((item,index)=>{\r\n                return <NavLink activeClassName=\"active\" to={`${pathname}?cat=${cat}&limit=${limit}&page=${index+1}`} key={index} onClick={()=>{\r\n                    fn(index)\r\n                }}>{index+1}</NavLink>\r\n                })\r\n            }\r\n            <NavLink to={`${pathname}?cat=${cat}&limit=${limit}&page=${(page<=5&&page>0?Number(page)+1:page)}`}>下一页</NavLink>\r\n        </Fragment>\r\n        \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
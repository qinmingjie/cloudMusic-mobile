{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport { useRef, useEffect } from 'react';\nexport var EventEmitter = function EventEmitter() {\n  var _this = this;\n\n  _classCallCheck(this, EventEmitter);\n\n  this.subscriptions = new Set();\n\n  this.emit = function (val) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _this.subscriptions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var subscription = _step.value;\n        subscription(val);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  };\n\n  this.useSubscription = function (callback) {\n    var callbackRef = useRef();\n    callbackRef.current = callback;\n    useEffect(function () {\n      function subscription(val) {\n        if (callbackRef.current) {\n          callbackRef.current(val);\n        }\n      }\n\n      _this.subscriptions.add(subscription);\n\n      return function () {\n        _this.subscriptions.delete(subscription);\n      };\n    }, []);\n  };\n};\nexport default function useEventEmitter() {\n  var ref = useRef();\n\n  if (!ref.current) {\n    ref.current = new EventEmitter();\n  }\n\n  return ref.current;\n}","map":{"version":3,"sources":["E:/github-project/cloudMusic-mobile/node_modules/@umijs/hooks/es/useEventEmitter/index.js"],"names":["_classCallCheck","instance","Constructor","TypeError","useRef","useEffect","EventEmitter","_this","subscriptions","Set","emit","val","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","subscription","value","err","return","useSubscription","callback","callbackRef","current","add","delete","useEventEmitter","ref"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAO,IAAIC,YAAY,GAAG,SAASA,YAAT,GAAwB;AAChD,MAAIC,KAAK,GAAG,IAAZ;;AAEAP,EAAAA,eAAe,CAAC,IAAD,EAAOM,YAAP,CAAf;;AAEA,OAAKE,aAAL,GAAqB,IAAIC,GAAJ,EAArB;;AAEA,OAAKC,IAAL,GAAY,UAAUC,GAAV,EAAe;AACzB,QAAIC,yBAAyB,GAAG,IAAhC;AACA,QAAIC,iBAAiB,GAAG,KAAxB;AACA,QAAIC,cAAc,GAAGC,SAArB;;AAEA,QAAI;AACF,WAAK,IAAIC,SAAS,GAAGT,KAAK,CAACC,aAAN,CAAoBS,MAAM,CAACC,QAA3B,GAAhB,EAAwDC,KAA7D,EAAoE,EAAEP,yBAAyB,GAAG,CAACO,KAAK,GAAGH,SAAS,CAACI,IAAV,EAAT,EAA2BC,IAAzD,CAApE,EAAoIT,yBAAyB,GAAG,IAAhK,EAAsK;AACpK,YAAIU,YAAY,GAAGH,KAAK,CAACI,KAAzB;AACAD,QAAAA,YAAY,CAACX,GAAD,CAAZ;AACD;AACF,KALD,CAKE,OAAOa,GAAP,EAAY;AACZX,MAAAA,iBAAiB,GAAG,IAApB;AACAC,MAAAA,cAAc,GAAGU,GAAjB;AACD,KARD,SAQU;AACR,UAAI;AACF,YAAI,CAACZ,yBAAD,IAA8BI,SAAS,CAACS,MAAV,IAAoB,IAAtD,EAA4D;AAC1DT,UAAAA,SAAS,CAACS,MAAV;AACD;AACF,OAJD,SAIU;AACR,YAAIZ,iBAAJ,EAAuB;AACrB,gBAAMC,cAAN;AACD;AACF;AACF;AACF,GAxBD;;AA0BA,OAAKY,eAAL,GAAuB,UAAUC,QAAV,EAAoB;AACzC,QAAIC,WAAW,GAAGxB,MAAM,EAAxB;AACAwB,IAAAA,WAAW,CAACC,OAAZ,GAAsBF,QAAtB;AACAtB,IAAAA,SAAS,CAAC,YAAY;AACpB,eAASiB,YAAT,CAAsBX,GAAtB,EAA2B;AACzB,YAAIiB,WAAW,CAACC,OAAhB,EAAyB;AACvBD,UAAAA,WAAW,CAACC,OAAZ,CAAoBlB,GAApB;AACD;AACF;;AAEDJ,MAAAA,KAAK,CAACC,aAAN,CAAoBsB,GAApB,CAAwBR,YAAxB;;AAEA,aAAO,YAAY;AACjBf,QAAAA,KAAK,CAACC,aAAN,CAAoBuB,MAApB,CAA2BT,YAA3B;AACD,OAFD;AAGD,KAZQ,EAYN,EAZM,CAAT;AAaD,GAhBD;AAiBD,CAlDM;AAmDP,eAAe,SAASU,eAAT,GAA2B;AACxC,MAAIC,GAAG,GAAG7B,MAAM,EAAhB;;AAEA,MAAI,CAAC6B,GAAG,CAACJ,OAAT,EAAkB;AAChBI,IAAAA,GAAG,CAACJ,OAAJ,GAAc,IAAIvB,YAAJ,EAAd;AACD;;AAED,SAAO2B,GAAG,CAACJ,OAAX;AACD","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { useRef, useEffect } from 'react';\nexport var EventEmitter = function EventEmitter() {\n  var _this = this;\n\n  _classCallCheck(this, EventEmitter);\n\n  this.subscriptions = new Set();\n\n  this.emit = function (val) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _this.subscriptions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var subscription = _step.value;\n        subscription(val);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  };\n\n  this.useSubscription = function (callback) {\n    var callbackRef = useRef();\n    callbackRef.current = callback;\n    useEffect(function () {\n      function subscription(val) {\n        if (callbackRef.current) {\n          callbackRef.current(val);\n        }\n      }\n\n      _this.subscriptions.add(subscription);\n\n      return function () {\n        _this.subscriptions.delete(subscription);\n      };\n    }, []);\n  };\n};\nexport default function useEventEmitter() {\n  var ref = useRef();\n\n  if (!ref.current) {\n    ref.current = new EventEmitter();\n  }\n\n  return ref.current;\n}"]},"metadata":{},"sourceType":"module"}
import { DependencyList } from 'react';
export interface ReturnValue<Item> {
    data: Item[];
    loading: boolean;
    pagination: {
        current: number;
        pageSize: number;
        total: number;
        totalPage: number;
        onChange: (current: number, pageSize: number) => void;
        changeCurrent: (current: number) => void;
        changePageSize: (pageSize: number) => void;
    };
    refresh: () => void;
}
export interface FormattedResult<Item> {
    current?: number;
    pageSize?: number;
    total: number;
    data: Item[];
}
export interface Options<Result, Item> {
    defaultPageSize?: number;
    formatResult?: (result: Result) => FormattedResult<Item>;
}
export interface FnParams {
    current: number;
    pageSize: number;
    [key: string]: any;
}
declare function usePagination<Result, Item>(fn: (params: FnParams) => Promise<Result>, options?: Options<Result, Item>): ReturnValue<Item>;
declare function usePagination<Result, Item>(fn: (params: FnParams) => Promise<Result>, deps?: DependencyList, options?: Options<Result, Item>): ReturnValue<Item>;
export default usePagination;

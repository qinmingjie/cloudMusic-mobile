import { DependencyList, RefObject } from 'react';
export interface ReturnValue<Item> {
    loading: boolean;
    loadingMore: boolean;
    data: Item[];
    reload: () => void;
    loadMore: () => void;
    noMore: boolean;
    total: number | undefined;
}
export interface Options<Result, Item> {
    initPageSize?: number;
    incrementSize?: number;
    itemKey?: string | ((record: Item, index: number) => string);
    formatResult?: (x: Result) => {
        total: number;
        data: Item[];
    };
    ref?: RefObject<HTMLElement>;
    threshold?: number;
}
export interface FnParams {
    page: number;
    pageSize: number;
    offset: number;
    id?: any;
    startTime: number;
}
declare function useLoadMore<Result = any, Item = any>(fn: (params: FnParams) => Promise<Result>, options?: Options<Result, Item>): ReturnValue<Item>;
declare function useLoadMore<Result = any, Item = any>(fn: (params: FnParams) => Promise<Result>, deps?: DependencyList, options?: Options<Result, Item>): ReturnValue<Item>;
export default useLoadMore;
